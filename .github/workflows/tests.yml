name: Tests
on:
  - push

jobs:
  test:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        include:
          - { python-version: "3.8", os: ubuntu-latest, session: "mypy" }
          - { python-version: "3.8", os: ubuntu-latest, session: "tests" }
          - { python-version: "3.9", os: ubuntu-latest, session: "mypy" }
          - { python-version: "3.9", os: ubuntu-latest, session: "tests" }
          - { python-version: "3.10", os: ubuntu-latest, session: "mypy" }
          - { python-version: "3.10", os: ubuntu-latest, session: "tests" }
          - { python-version: "3.11", os: ubuntu-latest, session: "mypy" }
          - { python-version: "3.11", os: ubuntu-latest, session: "tests" }
          - { python-version: "3.11", os: macos-latest, session: "tests" }
          - { python-version: "3.11", os: windows-latest, session: "tests" }
          - { python-version: "3.11", os: ubuntu-latest, session: "pre-commit" }
          - { python-version: "3.11", os: ubuntu-latest, session: "xdoctest" }
          - { python-version: "3.11", os: ubuntu-latest, session: "typeguard" }
          # - { python-version: "3.11", os: ubuntu-latest, session: "safety" }

    env:
      NOXSESSION: ${{ matrix.session }}

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4.1.7

      - name: Lint with Ruff
        uses: chartboost/ruff-action@v1

      # Setup Python (faster than using Python container)
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Upgrade pip
        run: |
          pip install pip
          pip --version
      - name: Install Poetry
        run: |
          pipx install poetry
          poetry --version
      - name: Install Nox
        run: |
          pipx install nox
          pipx inject nox nox-poetry
          nox --version

      - name: Compute pre-commit cache key
        if: matrix.session == 'pre-commit'
        id: pre-commit-cache
        shell: python
        run: |
          import hashlib
          import sys
          python = "py{}.{}".format(*sys.version_info[:2])
          payload = sys.version.encode() + sys.executable.encode()
          digest = hashlib.sha256(payload).hexdigest()
          result = "${{ runner.os }}-{}-{}-pre-commit".format(python, digest[:8])
          print("::set-output name=result::{}".format(result))
      - name: Restore pre-commit cache
        uses: actions/cache@v4.0.2
        if: matrix.session == 'pre-commit'
        with:
          path: ~/.cache/pre-commit
          key: ${{ steps.pre-commit-cache.outputs.result }}-${{ hashFiles('.pre-commit-config.yaml') }}
          restore-keys: |
            ${{ steps.pre-commit-cache.outputs.result }}-
      - name: Run Nox
        run: |
          nox --force-color --python=${{ matrix.python-version }}
      - name: Upload coverage data
        if: always() && matrix.session == 'tests'
        uses: "actions/upload-artifact@v3"
        with:
          name: coverage-data
          path: ".coverage.*"

      - name: Upload documentation
        if: matrix.session == 'docs-build'
        uses: actions/upload-artifact@v3
        with:
          name: docs
          path: docs/_build

  coverage:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4.1.7

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Upgrade pip
        run: |
          pip install pip
          pip --version
      - name: Install Poetry
        run: |
          pipx install poetry
          poetry --version
      - name: Install Nox
        run: |
          pipx install nox
          pipx inject nox nox-poetry
          nox --version

      - name: Run codecov session
        run: nox --sessions tests-3.11 coverage
        env:
          CODECOV_TOKEN: ${{secrets.CODECOV_TOKEN}}
